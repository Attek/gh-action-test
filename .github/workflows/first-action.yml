name: First Workflow
on:
  workflow_dispatch:
    inputs:
      branch_or_tag_to_build:
        description: 'Provide a branch name or tag to build the Docker image from'
        type: string
        required: true
        default: 'develop'
      build_bcel_image:
        description: 'Build BCEL image'
        type: boolean
        default: true

env:
  # If the workflow is started manually, the specified branch/tag is used,
  # but if workflow is reused the name of the triggering branch/tag of the main workflow is inherited.
  branch_or_tag_to_build: ${{ inputs.branch_or_tag_to_build != '' && inputs.branch_or_tag_to_build || github.ref_name }}
  trivy_run: true
  CUSTOMERS: '["disp", "os-a320", "lh-a320", "lx-cont", "lx-contint"]'

jobs:
  first-job:
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.docker-repository.outputs.repo }}
      tag: ${{ steps.docker-repository.outputs.image }}
      enable_trivy: ${{ steps.docker-repository.outputs.enable_trivy }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create repository data
        id: docker-repository
        run: |
          if [[ "${{ env.branch_or_tag_to_build }}" =~ ^(develop|disp-[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?)$ ]]; then
            echo "enable_trivy=true" >> $GITHUB_OUTPUT
          else
            echo "enable_trivy=false" >> $GITHUB_OUTPUT
          fi
          echo "repo=\"$(make docker-repository)\"" >> $GITHUB_OUTPUT
          echo "image=$(make docker-image-tag)" >> $GITHUB_OUTPUT

  second-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        customer: ${{ fromJSON(env.CUSTOMERS) }}
        environment: [ test ]
        include:
          - customer: disp
            environment: dev
    needs: first-job
    steps:
      - name: Show variables
        run: |
          echo "Repo: ${{ needs.first-job.outputs.repo }}"
          echo "Tag: ${{ needs.first-job.outputs.tag }}"
          echo "Trivy run: ${{ needs.first-job.outputs.enable_trivy }}"
          echo "Customer: ${{ matrix.customer }} Enviroment: ${{ matrix.environment }}"

  third-job:
    strategy:
      matrix:
        customer: ${{ fromJSON(env.CUSTOMERS) }}
#        environment: [dev, test]
    runs-on: ubuntu-latest
    needs: first-job
    if: needs.first-job.outputs.enable_trivy == 'true' && inputs.build_bcel_image
    steps:
      - name: Show variables if trivy is enabled
        run: |
          echo "Repo: ${{ needs.first-job.outputs.repo }}"
          echo "Tag: ${{ needs.first-job.outputs.tag }}"
          echo "Trivy run: ${{ needs.first-job.outputs.enable_trivy }}"
          echo "Customer: ${{ matrix.customer }} Enviroment: test"